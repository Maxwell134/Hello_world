name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker image to pull'
        default: 'alpine:latest'
        required: true
        type: string

      image_tag: 
        description: 'docker image tag'
        required: true
        type: string


jobs:
  pull-and-run-docker-image:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Delete existing images
        run: docker rmi $(docker images -qa)

      - name: Check if Docker Image Exists on Docker Hub
        id: check-docker-image
        run: python3 docker_login.py
          
        env:
          INPUT_IMAGE: ${{ inputs.image }}
          INPUT_IMAGE_TAG: ${{ inputs.image_tag }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        if: steps.check-docker-image.outputs.image_exists == 'false'
        run: docker pull ${{ inputs.image }}:{{ inputs.image_tag }}

      # - name: Pull Docker Image
      #   run: docker pull ${{ inputs.image }}

      - name: Show Docker Images
        run: docker images

      - name: Run Docker Container
        run: docker run -itd --name my-container -p 80:80 ${{ inputs.image }}:${{ inputs.image_tag }}

      - name: Wait for Container to be Ready
        run: sleep 10s

      - name: curl
        run: curl localhost:80
        
      - name: Tag Docker Image
        run: docker tag ${{ inputs.image }} ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:${{ inputs.image_tag }}

      - name: Push Docker Image to Main
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image }}:${{ inputs.image_tag }}

      - name: Delete  all Docker Config File
        run: rm -f /home/runner/.docker/config.json

